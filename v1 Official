

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Destroyer Hub | By A867", "Ocean")

-- MAIN
local Body = Window:NewTab("Player")
local BodySection = Body:NewSection("Player")


BodySection:NewButton("Headless", "Makes you headless", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/Burp1prz"))()
end)

BodySection:NewButton("Animations and dances", "Gives you a GUI full of dances and animations", function()
    loadstring(game:HttpGet("https://gitlab.com/Tsuniox/lua-stuff/-/raw/master/R15GUI.lua"))()
end)

BodySection:NewToggle("The Flash", "Be super fast", function(state)
    if state then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 90
    else
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 14
    end
end)
h
BodySection:NewToggle("The Jumper", "Be able to jump high", function(state)
    if state then
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 150
    else
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
    end
end)

BodySection:NewSlider("Walkspeed", "Change your speed!", 500, 16, function(v)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
end)

BodySection:NewSlider("Jumppower", "Change your jump power!", 350, 50, function(v)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
end)


-- VISUALS
local Visuals = Window:NewTab("Visuals")
local VisualsSection = AdditionalScripts:NewSection("Visuals")


VisualsSection:NewToggle("ESP", "Gives you ESP", function(state)
    if state then
        local Settings = {
            ['Material'] = Enum.Material.Neon, -- Material
            ['Color'] = Color3.fromRGB(222,112,27), -- Color
            ['Transparency'] = 1 -- 0 to 1 Transparency
        }
        
        local ScreenGui = Instance.new('ScreenGui', game.CoreGui) -- Create screengui
        ScreenGui.IgnoreGuiInset = true
        
        local ViewportFrame = Instance.new('ViewportFrame', ScreenGui) -- Create viewport and define properties
        ViewportFrame.CurrentCamera = workspace.CurrentCamera
        ViewportFrame.Size = UDim2.new(1,0,1,0)
        ViewportFrame.BackgroundTransparency = 1
        ViewportFrame.ImageTransparency = Settings.Transparency
        
        local Chasms = {} -- Array for storing parts
        
        function generateChasm(player) -- functions that generates chasms for the player specififed
            local Character = workspace:FindFirstChild(player.Name)
            
            if Character then
                for _,Part in pairs(Character:GetChildren()) do
                    if Part:IsA('Part') or Part:IsA('MeshPart') then
                        local Chasm = Part:Clone()
                        
                        for _,Child in pairs(Chasm:GetChildren()) do
                            if Child:IsA('Decal') then
                                Child:Destroy()
                            end
                        end
                        
                        Chasm.Parent = ViewportFrame
                        Chasm.Material = Settings.Material
                        Chasm.Color = Settings.Color
                        Chasm.Anchored = true
                        
                        table.insert(Chasms, Chasm)
                    end
                end
            end
        end
        
        function clearChasms() -- remove all chasms
            for _,Chasm in pairs(Chasms) do
                Chasm:Destroy()
            end
            
            Chasms = {}
        end
        
        while game:GetService('RunService').RenderStepped:Wait() do -- loop this process
            clearChasms()
            
            for _,Player in pairs(game:GetService('Players'):GetPlayers()) do
                if Player ~= game:GetService('Players').LocalPlayer then
                    generateChasm(Player)
                end
            end
        end
    else
        local Settings = {
            ['Material'] = Enum.Material.Neon, -- Material
            ['Color'] = Color3.fromRGB(222,112,27), -- Color
            ['Transparency'] = 0 -- 0 to 1 Transparency
        }
        
        local ScreenGui = Instance.new('ScreenGui', game.CoreGui) -- Create screengui
        ScreenGui.IgnoreGuiInset = true
        
        local ViewportFrame = Instance.new('ViewportFrame', ScreenGui) -- Create viewport and define properties
        ViewportFrame.CurrentCamera = workspace.CurrentCamera
        ViewportFrame.Size = UDim2.new(1,0,1,0)
        ViewportFrame.BackgroundTransparency = 1
        ViewportFrame.ImageTransparency = Settings.Transparency
        
        local Chasms = {} -- Array for storing parts
        
        function generateChasm(player) -- functions that generates chasms for the player specififed
            local Character = workspace:FindFirstChild(player.Name)
            
            if Character then
                for _,Part in pairs(Character:GetChildren()) do
                    if Part:IsA('Part') or Part:IsA('MeshPart') then
                        local Chasm = Part:Clone()
                        
                        for _,Child in pairs(Chasm:GetChildren()) do
                            if Child:IsA('Decal') then
                                Child:Destroy()
                            end
                        end
                        
                        Chasm.Parent = ViewportFrame
                        Chasm.Material = Settings.Material
                        Chasm.Color = Settings.Color
                        Chasm.Anchored = true
                        
                        table.insert(Chasms, Chasm)
                    end
                end
            end
        end
        
        function clearChasms() -- remove all chasms
            for _,Chasm in pairs(Chasms) do
                Chasm:Destroy()
            end
            
            Chasms = {}
        end
        
        while game:GetService('RunService').RenderStepped:Wait() do -- loop this process
            clearChasms()
            
            for _,Player in pairs(game:GetService('Players'):GetPlayers()) do
                if Player ~= game:GetService('Players').LocalPlayer then
                    generateChasm(Player)
                end
            end
        end
    end
end)


-- SCRIPTS
local AdditionalScripts = Window:NewTab("Scripts")
local AdditionalScriptsSection = AdditionalScripts:NewSection("Scripts")


AdditionalScriptsSection:NewButton("Infinite Yield", "Launches Infinite Yield GUI", function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)

AdditionalScriptsSection:NewButton("Prevail X", "Launches Prevail X GUI", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/mHfK0Xk4", true))()
end)

AdditionalScriptsSection:NewButton("Solaris Hub", "Launches Solaris Hub GUI", function()
    loadstring(game:HttpGet('https://solarishub.dev/script.lua',true))()
end)



